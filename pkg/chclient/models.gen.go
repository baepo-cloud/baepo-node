// Package chclient provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package chclient

// Defines values for ConsoleConfigMode.
const (
	ConsoleConfigModeFile   ConsoleConfigMode = "File"
	ConsoleConfigModeNull   ConsoleConfigMode = "Null"
	ConsoleConfigModeOff    ConsoleConfigMode = "Off"
	ConsoleConfigModePty    ConsoleConfigMode = "Pty"
	ConsoleConfigModeSocket ConsoleConfigMode = "Socket"
	ConsoleConfigModeTty    ConsoleConfigMode = "Tty"
)

// Defines values for DebugConsoleConfigMode.
const (
	DebugConsoleConfigModeFile DebugConsoleConfigMode = "File"
	DebugConsoleConfigModeNull DebugConsoleConfigMode = "Null"
	DebugConsoleConfigModeOff  DebugConsoleConfigMode = "Off"
	DebugConsoleConfigModePty  DebugConsoleConfigMode = "Pty"
	DebugConsoleConfigModeTty  DebugConsoleConfigMode = "Tty"
)

// Defines values for VmInfoState.
const (
	Created  VmInfoState = "Created"
	Paused   VmInfoState = "Paused"
	Running  VmInfoState = "Running"
	Shutdown VmInfoState = "Shutdown"
)

// BalloonConfig defines model for BalloonConfig.
type BalloonConfig struct {
	// DeflateOnOom Deflate balloon when the guest is under memory pressure.
	DeflateOnOom *bool `json:"deflate_on_oom,omitempty"`

	// FreePageReporting Enable guest to report free pages.
	FreePageReporting *bool `json:"free_page_reporting,omitempty"`
	Size              int64 `json:"size"`
}

// ConsoleConfig defines model for ConsoleConfig.
type ConsoleConfig struct {
	File   *string           `json:"file,omitempty"`
	Iommu  *bool             `json:"iommu,omitempty"`
	Mode   ConsoleConfigMode `json:"mode"`
	Socket *string           `json:"socket,omitempty"`
}

// ConsoleConfigMode defines model for ConsoleConfig.Mode.
type ConsoleConfigMode string

// CpuAffinity defines model for CpuAffinity.
type CpuAffinity struct {
	HostCpus []int `json:"host_cpus"`
	Vcpu     int   `json:"vcpu"`
}

// CpuFeatures defines model for CpuFeatures.
type CpuFeatures struct {
	Amx *bool `json:"amx,omitempty"`
}

// CpuTopology defines model for CpuTopology.
type CpuTopology struct {
	CoresPerDie    *int `json:"cores_per_die,omitempty"`
	DiesPerPackage *int `json:"dies_per_package,omitempty"`
	Packages       *int `json:"packages,omitempty"`
	ThreadsPerCore *int `json:"threads_per_core,omitempty"`
}

// CpusConfig defines model for CpusConfig.
type CpusConfig struct {
	Affinity    *[]CpuAffinity `json:"affinity,omitempty"`
	BootVcpus   int            `json:"boot_vcpus"`
	Features    *CpuFeatures   `json:"features,omitempty"`
	KvmHyperv   *bool          `json:"kvm_hyperv,omitempty"`
	MaxPhysBits *int           `json:"max_phys_bits,omitempty"`
	MaxVcpus    int            `json:"max_vcpus"`
	Topology    *CpuTopology   `json:"topology,omitempty"`
}

// DebugConsoleConfig defines model for DebugConsoleConfig.
type DebugConsoleConfig struct {
	File   *string                `json:"file,omitempty"`
	Iobase *int                   `json:"iobase,omitempty"`
	Mode   DebugConsoleConfigMode `json:"mode"`
}

// DebugConsoleConfigMode defines model for DebugConsoleConfig.Mode.
type DebugConsoleConfigMode string

// DeviceConfig defines model for DeviceConfig.
type DeviceConfig struct {
	Id                 *string `json:"id,omitempty"`
	Iommu              *bool   `json:"iommu,omitempty"`
	Path               string  `json:"path"`
	PciSegment         *int16  `json:"pci_segment,omitempty"`
	XNvGpudirectClique *int8   `json:"x_nv_gpudirect_clique,omitempty"`
}

// DeviceNode defines model for DeviceNode.
type DeviceNode struct {
	Children  *[]string                 `json:"children,omitempty"`
	Id        *string                   `json:"id,omitempty"`
	PciBdf    *string                   `json:"pci_bdf,omitempty"`
	Resources *[]map[string]interface{} `json:"resources,omitempty"`
}

// DiskConfig defines model for DiskConfig.
type DiskConfig struct {
	Direct         *bool                `json:"direct,omitempty"`
	Id             *string              `json:"id,omitempty"`
	Iommu          *bool                `json:"iommu,omitempty"`
	NumQueues      *int                 `json:"num_queues,omitempty"`
	Path           string               `json:"path"`
	PciSegment     *int16               `json:"pci_segment,omitempty"`
	QueueAffinity  *[]VirtQueueAffinity `json:"queue_affinity,omitempty"`
	QueueSize      *int                 `json:"queue_size,omitempty"`
	RateLimitGroup *string              `json:"rate_limit_group,omitempty"`

	// RateLimiterConfig Defines an IO rate limiter with independent bytes/s and ops/s limits. Limits are defined by configuring each of the _bandwidth_ and _ops_ token buckets.
	RateLimiterConfig *RateLimiterConfig `json:"rate_limiter_config,omitempty"`
	Readonly          *bool              `json:"readonly,omitempty"`
	Serial            *string            `json:"serial,omitempty"`
	VhostSocket       *string            `json:"vhost_socket,omitempty"`
	VhostUser         *bool              `json:"vhost_user,omitempty"`
}

// FsConfig defines model for FsConfig.
type FsConfig struct {
	Id         *string `json:"id,omitempty"`
	NumQueues  int     `json:"num_queues"`
	PciSegment *int16  `json:"pci_segment,omitempty"`
	QueueSize  int     `json:"queue_size"`
	Socket     string  `json:"socket"`
	Tag        string  `json:"tag"`
}

// LandlockConfig defines model for LandlockConfig.
type LandlockConfig struct {
	Access string `json:"access"`
	Path   string `json:"path"`
}

// MemoryConfig defines model for MemoryConfig.
type MemoryConfig struct {
	HotplugMethod  *string             `json:"hotplug_method,omitempty"`
	HotplugSize    *int64              `json:"hotplug_size,omitempty"`
	HotpluggedSize *int64              `json:"hotplugged_size,omitempty"`
	HugepageSize   *int64              `json:"hugepage_size,omitempty"`
	Hugepages      *bool               `json:"hugepages,omitempty"`
	Mergeable      *bool               `json:"mergeable,omitempty"`
	Prefault       *bool               `json:"prefault,omitempty"`
	Shared         *bool               `json:"shared,omitempty"`
	Size           int64               `json:"size"`
	Thp            *bool               `json:"thp,omitempty"`
	Zones          *[]MemoryZoneConfig `json:"zones,omitempty"`
}

// MemoryZoneConfig defines model for MemoryZoneConfig.
type MemoryZoneConfig struct {
	File           *string `json:"file,omitempty"`
	HostNumaNode   *int32  `json:"host_numa_node,omitempty"`
	HotplugSize    *int64  `json:"hotplug_size,omitempty"`
	HotpluggedSize *int64  `json:"hotplugged_size,omitempty"`
	HugepageSize   *int64  `json:"hugepage_size,omitempty"`
	Hugepages      *bool   `json:"hugepages,omitempty"`
	Id             string  `json:"id"`
	Mergeable      *bool   `json:"mergeable,omitempty"`
	Prefault       *bool   `json:"prefault,omitempty"`
	Shared         *bool   `json:"shared,omitempty"`
	Size           int64   `json:"size"`
}

// NetConfig defines model for NetConfig.
type NetConfig struct {
	HostMac    *string `json:"host_mac,omitempty"`
	Id         *string `json:"id,omitempty"`
	Iommu      *bool   `json:"iommu,omitempty"`
	Ip         *string `json:"ip,omitempty"`
	Mac        *string `json:"mac,omitempty"`
	Mask       *string `json:"mask,omitempty"`
	Mtu        *int    `json:"mtu,omitempty"`
	NumQueues  *int    `json:"num_queues,omitempty"`
	PciSegment *int16  `json:"pci_segment,omitempty"`
	QueueSize  *int    `json:"queue_size,omitempty"`

	// RateLimiterConfig Defines an IO rate limiter with independent bytes/s and ops/s limits. Limits are defined by configuring each of the _bandwidth_ and _ops_ token buckets.
	RateLimiterConfig *RateLimiterConfig `json:"rate_limiter_config,omitempty"`
	Tap               *string            `json:"tap,omitempty"`
	VhostMode         *string            `json:"vhost_mode,omitempty"`
	VhostSocket       *string            `json:"vhost_socket,omitempty"`
	VhostUser         *bool              `json:"vhost_user,omitempty"`
}

// NumaConfig defines model for NumaConfig.
type NumaConfig struct {
	Cpus           *[]int32        `json:"cpus,omitempty"`
	Distances      *[]NumaDistance `json:"distances,omitempty"`
	GuestNumaId    int32           `json:"guest_numa_id"`
	MemoryZones    *[]string       `json:"memory_zones,omitempty"`
	PciSegments    *[]int32        `json:"pci_segments,omitempty"`
	SgxEpcSections *[]string       `json:"sgx_epc_sections,omitempty"`
}

// NumaDistance defines model for NumaDistance.
type NumaDistance struct {
	Destination int32 `json:"destination"`
	Distance    int32 `json:"distance"`
}

// PayloadConfig Payloads to boot in guest
type PayloadConfig struct {
	Cmdline   *string `json:"cmdline,omitempty"`
	Firmware  *string `json:"firmware,omitempty"`
	HostData  *string `json:"host_data,omitempty"`
	Igvm      *string `json:"igvm,omitempty"`
	Initramfs *string `json:"initramfs,omitempty"`
	Kernel    *string `json:"kernel,omitempty"`
}

// PciDeviceInfo Information about a PCI device
type PciDeviceInfo struct {
	Bdf string `json:"bdf"`
	Id  string `json:"id"`
}

// PciSegmentConfig defines model for PciSegmentConfig.
type PciSegmentConfig struct {
	Mmio32ApertureWeight *int32 `json:"mmio32_aperture_weight,omitempty"`
	Mmio64ApertureWeight *int32 `json:"mmio64_aperture_weight,omitempty"`
	PciSegment           int16  `json:"pci_segment"`
}

// PlatformConfig defines model for PlatformConfig.
type PlatformConfig struct {
	IommuAddressWidth *uint8    `json:"iommu_address_width,omitempty"`
	IommuSegments     *[]int16  `json:"iommu_segments,omitempty"`
	NumPciSegments    *int16    `json:"num_pci_segments,omitempty"`
	OemStrings        *[]string `json:"oem_strings,omitempty"`
	SerialNumber      *string   `json:"serial_number,omitempty"`
	SevSnp            *bool     `json:"sev_snp,omitempty"`
	Tdx               *bool     `json:"tdx,omitempty"`
	Uuid              *string   `json:"uuid,omitempty"`
}

// PmemConfig defines model for PmemConfig.
type PmemConfig struct {
	DiscardWrites *bool   `json:"discard_writes,omitempty"`
	File          string  `json:"file"`
	Id            *string `json:"id,omitempty"`
	Iommu         *bool   `json:"iommu,omitempty"`
	PciSegment    *int16  `json:"pci_segment,omitempty"`
	Size          *int64  `json:"size,omitempty"`
}

// RateLimitGroupConfig defines model for RateLimitGroupConfig.
type RateLimitGroupConfig struct {
	Id string `json:"id"`

	// RateLimiterConfig Defines an IO rate limiter with independent bytes/s and ops/s limits. Limits are defined by configuring each of the _bandwidth_ and _ops_ token buckets.
	RateLimiterConfig RateLimiterConfig `json:"rate_limiter_config"`
}

// RateLimiterConfig Defines an IO rate limiter with independent bytes/s and ops/s limits. Limits are defined by configuring each of the _bandwidth_ and _ops_ token buckets.
type RateLimiterConfig struct {
	// Bandwidth Defines a token bucket with a maximum capacity (_size_), an initial burst size (_one_time_burst_) and an interval for refilling purposes (_refill_time_). The refill-rate is derived from _size_ and _refill_time_, and it is the constant rate at which the tokens replenish. The refill process only starts happening after the initial burst budget is consumed. Consumption from the token bucket is unbounded in speed which allows for bursts bound in size by the amount of tokens available. Once the token bucket is empty, consumption speed is bound by the refill-rate.
	Bandwidth *TokenBucket `json:"bandwidth,omitempty"`

	// Ops Defines a token bucket with a maximum capacity (_size_), an initial burst size (_one_time_burst_) and an interval for refilling purposes (_refill_time_). The refill-rate is derived from _size_ and _refill_time_, and it is the constant rate at which the tokens replenish. The refill process only starts happening after the initial burst budget is consumed. Consumption from the token bucket is unbounded in speed which allows for bursts bound in size by the amount of tokens available. Once the token bucket is empty, consumption speed is bound by the refill-rate.
	Ops *TokenBucket `json:"ops,omitempty"`
}

// ReceiveMigrationData defines model for ReceiveMigrationData.
type ReceiveMigrationData struct {
	ReceiverUrl string `json:"receiver_url"`
}

// RestoreConfig defines model for RestoreConfig.
type RestoreConfig struct {
	Prefault  *bool  `json:"prefault,omitempty"`
	SourceUrl string `json:"source_url"`
}

// RngConfig defines model for RngConfig.
type RngConfig struct {
	Iommu *bool  `json:"iommu,omitempty"`
	Src   string `json:"src"`
}

// SendMigrationData defines model for SendMigrationData.
type SendMigrationData struct {
	DestinationUrl string `json:"destination_url"`
	Local          *bool  `json:"local,omitempty"`
}

// SgxEpcConfig defines model for SgxEpcConfig.
type SgxEpcConfig struct {
	Id       string `json:"id"`
	Prefault *bool  `json:"prefault,omitempty"`
	Size     int64  `json:"size"`
}

// TokenBucket Defines a token bucket with a maximum capacity (_size_), an initial burst size (_one_time_burst_) and an interval for refilling purposes (_refill_time_). The refill-rate is derived from _size_ and _refill_time_, and it is the constant rate at which the tokens replenish. The refill process only starts happening after the initial burst budget is consumed. Consumption from the token bucket is unbounded in speed which allows for bursts bound in size by the amount of tokens available. Once the token bucket is empty, consumption speed is bound by the refill-rate.
type TokenBucket struct {
	// OneTimeBurst The initial size of a token bucket.
	OneTimeBurst *int64 `json:"one_time_burst,omitempty"`

	// RefillTime The amount of milliseconds it takes for the bucket to refill.
	RefillTime int64 `json:"refill_time"`

	// Size The total number of tokens this bucket can hold.
	Size int64 `json:"size"`
}

// TpmConfig defines model for TpmConfig.
type TpmConfig struct {
	Socket string `json:"socket"`
}

// VdpaConfig defines model for VdpaConfig.
type VdpaConfig struct {
	Id         *string `json:"id,omitempty"`
	Iommu      *bool   `json:"iommu,omitempty"`
	NumQueues  int     `json:"num_queues"`
	Path       string  `json:"path"`
	PciSegment *int16  `json:"pci_segment,omitempty"`
}

// VirtQueueAffinity defines model for VirtQueueAffinity.
type VirtQueueAffinity struct {
	HostCpus   []int `json:"host_cpus"`
	QueueIndex int   `json:"queue_index"`
}

// VmAddUserDevice defines model for VmAddUserDevice.
type VmAddUserDevice struct {
	Socket string `json:"socket"`
}

// VmConfig Virtual machine configuration
type VmConfig struct {
	Balloon        *BalloonConfig      `json:"balloon,omitempty"`
	Console        *ConsoleConfig      `json:"console,omitempty"`
	Cpus           *CpusConfig         `json:"cpus,omitempty"`
	DebugConsole   *DebugConsoleConfig `json:"debug_console,omitempty"`
	Devices        *[]DeviceConfig     `json:"devices,omitempty"`
	Disks          *[]DiskConfig       `json:"disks,omitempty"`
	Fs             *[]FsConfig         `json:"fs,omitempty"`
	Iommu          *bool               `json:"iommu,omitempty"`
	LandlockEnable *bool               `json:"landlock_enable,omitempty"`
	LandlockRules  *[]LandlockConfig   `json:"landlock_rules,omitempty"`
	Memory         *MemoryConfig       `json:"memory,omitempty"`
	Net            *[]NetConfig        `json:"net,omitempty"`
	Numa           *[]NumaConfig       `json:"numa,omitempty"`

	// Payload Payloads to boot in guest
	Payload         PayloadConfig           `json:"payload"`
	PciSegments     *[]PciSegmentConfig     `json:"pci_segments,omitempty"`
	Platform        *PlatformConfig         `json:"platform,omitempty"`
	Pmem            *[]PmemConfig           `json:"pmem,omitempty"`
	Pvpanic         *bool                   `json:"pvpanic,omitempty"`
	RateLimitGroups *[]RateLimitGroupConfig `json:"rate_limit_groups,omitempty"`
	Rng             *RngConfig              `json:"rng,omitempty"`
	Serial          *ConsoleConfig          `json:"serial,omitempty"`
	SgxEpc          *[]SgxEpcConfig         `json:"sgx_epc,omitempty"`
	Tpm             *TpmConfig              `json:"tpm,omitempty"`
	Vdpa            *[]VdpaConfig           `json:"vdpa,omitempty"`
	Vsock           *VsockConfig            `json:"vsock,omitempty"`
	Watchdog        *bool                   `json:"watchdog,omitempty"`
}

// VmCoredumpData defines model for VmCoredumpData.
type VmCoredumpData struct {
	DestinationUrl *string `json:"destination_url,omitempty"`
}

// VmCounters defines model for VmCounters.
type VmCounters map[string]map[string]int64

// VmInfo Virtual Machine information
type VmInfo struct {
	// Config Virtual machine configuration
	Config           VmConfig               `json:"config"`
	DeviceTree       *map[string]DeviceNode `json:"device_tree,omitempty"`
	MemoryActualSize *int64                 `json:"memory_actual_size,omitempty"`
	State            VmInfoState            `json:"state"`
}

// VmInfoState defines model for VmInfo.State.
type VmInfoState string

// VmRemoveDevice defines model for VmRemoveDevice.
type VmRemoveDevice struct {
	Id *string `json:"id,omitempty"`
}

// VmResize defines model for VmResize.
type VmResize struct {
	// DesiredBalloon desired balloon size in bytes
	DesiredBalloon *int64 `json:"desired_balloon,omitempty"`

	// DesiredRam desired memory ram in bytes
	DesiredRam   *int64 `json:"desired_ram,omitempty"`
	DesiredVcpus *int   `json:"desired_vcpus,omitempty"`
}

// VmResizeZone defines model for VmResizeZone.
type VmResizeZone struct {
	// DesiredRam desired memory zone size in bytes
	DesiredRam *int64  `json:"desired_ram,omitempty"`
	Id         *string `json:"id,omitempty"`
}

// VmSnapshotConfig defines model for VmSnapshotConfig.
type VmSnapshotConfig struct {
	DestinationUrl *string `json:"destination_url,omitempty"`
}

// VmmPingResponse Virtual Machine Monitor information
type VmmPingResponse struct {
	BuildVersion *string   `json:"build_version,omitempty"`
	Features     *[]string `json:"features,omitempty"`
	Pid          *int64    `json:"pid,omitempty"`
	Version      string    `json:"version"`
}

// VsockConfig defines model for VsockConfig.
type VsockConfig struct {
	// Cid Guest Vsock CID
	Cid        int64   `json:"cid"`
	Id         *string `json:"id,omitempty"`
	Iommu      *bool   `json:"iommu,omitempty"`
	PciSegment *int16  `json:"pci_segment,omitempty"`

	// Socket Path to UNIX domain socket, used to proxy vsock connections.
	Socket string `json:"socket"`
}

// PutVmAddDeviceJSONRequestBody defines body for PutVmAddDevice for application/json ContentType.
type PutVmAddDeviceJSONRequestBody = DeviceConfig

// PutVmAddDiskJSONRequestBody defines body for PutVmAddDisk for application/json ContentType.
type PutVmAddDiskJSONRequestBody = DiskConfig

// PutVmAddFsJSONRequestBody defines body for PutVmAddFs for application/json ContentType.
type PutVmAddFsJSONRequestBody = FsConfig

// PutVmAddNetJSONRequestBody defines body for PutVmAddNet for application/json ContentType.
type PutVmAddNetJSONRequestBody = NetConfig

// PutVmAddPmemJSONRequestBody defines body for PutVmAddPmem for application/json ContentType.
type PutVmAddPmemJSONRequestBody = PmemConfig

// PutVmAddUserDeviceJSONRequestBody defines body for PutVmAddUserDevice for application/json ContentType.
type PutVmAddUserDeviceJSONRequestBody = VmAddUserDevice

// PutVmAddVdpaJSONRequestBody defines body for PutVmAddVdpa for application/json ContentType.
type PutVmAddVdpaJSONRequestBody = VdpaConfig

// PutVmAddVsockJSONRequestBody defines body for PutVmAddVsock for application/json ContentType.
type PutVmAddVsockJSONRequestBody = VsockConfig

// PutVmCoredumpJSONRequestBody defines body for PutVmCoredump for application/json ContentType.
type PutVmCoredumpJSONRequestBody = VmCoredumpData

// CreateVMJSONRequestBody defines body for CreateVM for application/json ContentType.
type CreateVMJSONRequestBody = VmConfig

// PutVmReceiveMigrationJSONRequestBody defines body for PutVmReceiveMigration for application/json ContentType.
type PutVmReceiveMigrationJSONRequestBody = ReceiveMigrationData

// PutVmRemoveDeviceJSONRequestBody defines body for PutVmRemoveDevice for application/json ContentType.
type PutVmRemoveDeviceJSONRequestBody = VmRemoveDevice

// PutVmResizeJSONRequestBody defines body for PutVmResize for application/json ContentType.
type PutVmResizeJSONRequestBody = VmResize

// PutVmResizeZoneJSONRequestBody defines body for PutVmResizeZone for application/json ContentType.
type PutVmResizeZoneJSONRequestBody = VmResizeZone

// PutVmRestoreJSONRequestBody defines body for PutVmRestore for application/json ContentType.
type PutVmRestoreJSONRequestBody = RestoreConfig

// PutVmSendMigrationJSONRequestBody defines body for PutVmSendMigration for application/json ContentType.
type PutVmSendMigrationJSONRequestBody = SendMigrationData

// PutVmSnapshotJSONRequestBody defines body for PutVmSnapshot for application/json ContentType.
type PutVmSnapshotJSONRequestBody = VmSnapshotConfig
